1，检测数组：
Array.isArray(value);

2，栈方法：
last in first out

push()，数组末尾添加，返回长度，
pop()，移除最后一项，返回移除项，
（以上两个p开头的方法，都是操作的数组的屁股）
shift()，移除第一项，返回移除项
unshift()，数组前端添加，返回长度
（这两个就是操作的数组的头部）

添加的方法（unshift(…)，push(...)）永远是返回长度，删除的方法（shift()，pop()）永远是返回的删除的项
头部移除只有pop，头部添加只有unshift（unshit，非屁股），无论是数组头部还是尾部，添加或者删除只有一种方法

3，reverse()，将数组直接倒序
sort()，对数组按字符串排列

写一个将数组按从小到大的顺序排列的方法：
function compare(num1,num2){
	if(num1<num2){
		return -1
	}else if(num1>num2){
		return 1
	}else{
		return 0
	}
};

var values = [……要排序的数组…];

values.sort(compare);

values就是从小到大排列；
如果要从大到小，直接values.reverse();

4，concat()，合并数组，不影响原来的数组；

slice(a，b)，相当于复制一个数组，不改变原来的数组，参数a表示起始位置，b表示结束位置但不包含结束位置的元素，如果不写默认到最后

splice(a, b, c)，参数a表示起始位置，b表示要删除的项数，c表示要插入的项(可以是多个)

delete array[n] 这里补充一个，delete删除数组项，删除后的地方会用undefined来补上，注意


5，indexOf(n)，lastIndexOf(n)，返回要查找的项在数组中的位置，前者是从前往后查找，后者是从后往前，但是位置索引都是从前开始，没找到会返回-1。

6，迭代：（非常重要！！！！！！！！！！！！！！！）

所有的方法默认的参数都是item，index，array

1.every()：对数组中每一项都运行给定函数，如果都为true，才会返回true
	例：  var everyResult = array.every(function(item, index, array){
			return (item > 2)
		 });
		everyResult;     // true&false

2.some()：对数组中每一项都运行给定函数，只要有一项为true，就会返回true
	例：  var someResult = array.every(function(item, index, array){
			return (item > 2)
		 });
		someResult;     // true&false

3.filter()：对数组中每一项都运行给定函数，返回为true的项组成的新数组，相当于筛选
	例：	var filterResult = array.filter(function(item, index, array){
			return (item > 2)
		});
		filterResult; // [3,4,5,6]

4.map()：对数组中每一项都运行给定函数，然后每一项运行的结果组成的新数组
	例：	var mapResult = array.filter(function(item, index, array){
			return (item * 2)
		});
		mapResult; // [1,2,4,6,8….]

5.forEach()：对数组中每一项都运行给定函数，没有返回值，相当于for循环的简化版
	例：	array.forEach(function(item, index, array){
			…….
		});




7，归并方法：
reduce()和reduceRight()，接收4个参数：前一个值prev、当前值cur、项的索引index、数组对象array。reduce()是从第二项开始遍历，所以prev为第一项，cur为第二项。reduceRight()为从后往前，从倒数第二个遍历，所以prev为最后一项，cur为倒数第二项


8，数组相减：
var a = [1,2,3,4,5,6],
			b = [2,3,5];

		for(var i = a.length-1 ; i>=0; i--){
			var arr1 = a[i];
			for(var j = b.length-1 ; j>=0;j—-){
				var arr2 = b[j];
				if(arr1==arr2){
					a.splice(i,1);
					b.splice(j,1);
					break 			//注意，这里的break是退出当前的for循环
				}
			}
		}

		alert(a);    //[1,4,6]


9，split()，将字符串分割成多个子字符串组成的数组，可以传两个参数，第一个是以什么分割，第二个是可以指定数组的大小，返回的数组不会超过这个值
例：var text = “red,blue,yellow,green”;
   var text1 = text.split(“,”);    //[‘red’,’blue’,’yellow’,’green’];
   var text2 = text.split(“,”, 2);    //[‘red’,’blue’]
